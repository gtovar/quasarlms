<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
            Microsoft ResX Schema 
        
            Version 1.3
                
            The primary goals of this format is to allow a simple XML format 
            that is mostly human readable. The generation and parsing of the 
            various data types are done through the TypeConverter classes 
            associated with the data types.
        
            Example:
        
                ... ado.net/XML headers & schema ...
                <resheader name="resmimetype">text/microsoft-resx</resheader>
                <resheader name="version">1.3</resheader>
                <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
                <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
                <data name="Name1">this is my long string</data>
                <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
                <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
                    [base64 mime encoded serialized .NET Framework object]
                </data>
                <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
                    [base64 mime encoded string representing a byte array form of the .NET Framework object]
                </data>
        
            There are any number of "resheader" rows that contain simple 
            name/value pairs.
            
            Each data row contains a name, and value. The row also contains a 
            type or mimetype. Type corresponds to a .NET class that support 
            text/value conversion through the TypeConverter architecture. 
            Classes that don't support this are serialized and stored with the 
            mimetype set.
                     
            The mimetype is used for serialized objects, and tells the 
            ResXResourceReader how to depersist the object. This is currently not 
            extensible. For a given mimetype the value must be set accordingly:
        
            Note - application/x-microsoft.net.object.binary.base64 is the format 
                   that the ResXResourceWriter will generate, however the reader can 
                   read any of the formats listed below.
        
            mimetype: application/x-microsoft.net.object.binary.base64
            value   : The object must be serialized with 
                    : System.Serialization.Formatters.Binary.BinaryFormatter
                    : and then encoded with base64 encoding.
        
            mimetype: application/x-microsoft.net.object.soap.base64
            value   : The object must be serialized with 
                    : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
                    : and then encoded with base64 encoding.
            mimetype: application/x-microsoft.net.object.bytearray.base64
            value   : The object must be serialized into a byte array 
                    : using a System.ComponentModel.TypeConverter
                    : and then encoded with base64 encoding.
        -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MainMenu.Location" type="System.Drawing.Point, System.Drawing, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </data>
  <data name="CurrentContextMenu.Location" type="System.Drawing.Point, System.Drawing, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>265, 17</value>
  </data>
  <data name="MainContextMenu.Location" type="System.Drawing.Point, System.Drawing, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>129, 17</value>
  </data>
  <data name="$this.Name">
    <value>MainForm</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>90</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAAACoCAAAJgAAABAQAAAAAAAAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAH9sbQDRZmcA2W9wANdubwDTbG0A13BxANtzdADfdncA43l6AOV9
        fgDmfn8A6oKDAO6FhgD3i40A9oyNAPWNjgC6bG0A/JOUAPuTlAD9nZ4A/6GiAP+lpgD/tbYA/7m6AP+6
        uwD/vb4A/8PEAP/FxgDVa2sA2HFxANVxcADgd3cA2nR0AN54eADie3sA4Xt7AOWAfwDlf38A439+AOmD
        gwDlgIAA7oaGAOWCgQDjgIAA3Hx8AOyGhgDphIQA8ImJANt+fQDwiooA7YqJAOeGhQDIdHMA9I6OAOuI
        iAD4kZEA/JSUAPuUlAD3kZEA9pOSAP2YlwD+mJgA6oyMAP+bmwD/np4A/6GhALh0dAD/paUArG9vAP+n
        pwCfaGgA/6ioAP+srAD+q6sA+qqpAP+urgCvd3cA/6+vANuWlgDChoYA/rCwAO2kpAD/srIA76moAIVd
        XQD/tLQA9q2tAP+1tQD/trYAoXNzAI9nZwD/ubkA1pubAK9/fwD/vLwApXp6AOWrqwDVn58A/8DAAP2+
        vgCGZWUAfl9fAP/DwwCogIAAtYuLAP3ExAD/x8cAjG1tAHRbWwD/ysoA/83NAJN3dwB5ZGQAiHFxAN25
        uQCrkJAAdGVlAF5SUgCjkpIAqJmZAGxnZwBeWloAioWFAIOAgABnZmYAZmVlAFZVVQClpKQAzmxqANJv
        bQDYdXMA2Hh2AOWGgwDskY4A+52aAPaalwDqlZIA4JWSAPynpQDRjYsA252cAPazsQD4t7UAyJWUAP2+
        vQD+wL8A3KqpAPnFwwDgtLMArI2MANF5dADbhH8A44uGAPOWkgDyqqYA+K+sAPmzsADVgXsA3IuFAOqi
        nADuqaMA7rizAPK9uQCIbmwAinx7AG9kYwDgk4sA6JuTAPCzrQCNengA042DAMqGfQDRk4oAt5uXAJqT
        kgDSkIUAy4yCAOWtpADIpJ4A5rasAJR/ewDFrKcAuqypAN+rngC4kokAxqmiANihkgCXhH8AyZSEANSg
        kADMmooA1qOUAMKnnwCpmZQAyZiHANGfjgDRoZEAz6KSAMegkgDUq5wA0LSqAKeUjQC+mowAzaueALOW
        iwDGp5oAyKyhAMqvpACjjYQAyqCNAM6lkgDOqZgAwJ6PAMirngC+pJkAzaeUANCrmADLp5UAwqKSAMam
        lgCfhnkAs5iLAMClmADEqp0AZGJhAM6plQDEpJIAyq6eAM6tmQDLrZoAyauZAMeqmQDKrZwAwaaWAMOr
        nQDJqpYAy6+dAMGmkgDHrJgAwaqZAJKRjwCbm5sAmJiYAJSUlACTk5MAjIyMAIaGhgCEhIQAfX19AGpq
        agBlZWUAYGBgAFxcXABYWFgAAAAAAAAAAAAAAAAAAAAAAAAA8vL49vIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAPL4+fLKrnS8pvIAAAAAAAAAAAAAAAAAAAAAAAAAAPK8s5Wmzelqb2+19PLyAAAAAAAAAAAAAAAA
        AAAAAAAA46NqapPjyGpqb3CmvJZ1+gAAAAAAAAAAAAAAAAAAANfpompqarS0ampqkN20aqJy+wAAAAAA
        AAAAAAAAAAB7peO4ampqampqamqSopFqapGlAAAAAAAAAAAAAAAA3pNp48iRkZGRkZGRkZGRkZGRYa8A
        AAAAAAAAAAAAAOOykZFWjpGRkZGRkZGRkZGRkZFp9gAAAAAAAAAAAAC2yFZWVlZWVlZWVo6pqVZWVlZW
        Vmj9pXD7AAAAAAAAANDIm1ZWVlZWVldzAADJ6bhKVlZWV41UVnH4AAAAAAAAAM7Tm0pKSkpStwAAAAAA
        0NOhSkpKSkpKkPsAAAAAAAAAAOvTSkpKSpYAAAAAAAAA6dObSkpKSkpKeAAAAAAAAK8BubiLSkpPgAAA
        AAAAAAAA68CLSkpKSl0AAAAAAAAAwIuLi4uLi2AAAAAAAAAAAADQ4qCLi4tegAAAAAAAAOPAi4uLi4uL
        cQAAAAAAAAAAAADpu4uLi2b79AAAAAAA1bsUFBQUFBR1AAAAAAAAAAAAAOnTFBQUiU1l+wAAAADOwBQU
        FBQUFG0AAAAAAAAAAAAAtuKIFBQUFBT9AAAAAAAA6cCoPRQUW/YAAAAAAAAAAAC2yDwUFBQUFP0AAAAA
        AAAA19M8OTlD+wAAAAAAAAAAAM7iPDk5OTk5+AAAAAAAALfLiTw8PD929AAAAAAAAAAAzsA5PDmGiqAA
        AAAAAAAA44YPDw8PD0X99AAAAAAAAADrpw8PD2zxAAAAAAAAAOvEDw8PDw8PP1X79AAAAAAArsA/Dw8P
        R3/yAAAAAAAAtuKZLi4uLi4uLlV/+AAAAMLTmS4uLi4uR/sAAAAAAAAA6a0uhaefLi4uLhFtf/u1rYUu
        Li4uLi6FbAAAAAAAAADp6enp678KCgoKhYUtLYUKCgoKCgoKJS13AAAAAAAAAAAAAOnjsAoKCgoKCgoK
        CgoKCgqfXZgKUAAAAAAAAAAAAAAA6dOeBy0tBwctLS0tBy0tIEPRXV0AAAAAAAAAAAAAAADQ0gcHBwer
        ngcHBwctBwcHEf0AAAAAAAAAAAAAAAAAAOnpsQcDQ+m9BwcFntKXAwcHbAAAAAAAAAAAAAAAAAAAAOnp
        v4wA68MFBQU1670FBTVdAAAAAAAAAAAAAAAAAAAAAAAAAADr0oECAlq36axdAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAOnpsbGtAAAAAAAAAAAAAAAAAAD//B///8AP//8AA///AAD//gAAf/wAAH/4AAB/8AAAf+AA
        AA/gAwAH8AfAB/gP4AfgD/AP4B/wD8Af+AfAH/gDwB/4A/AP+AP4D/gD8Af4B/AD+A/gAfAH4ADgB/AA
        AAfwAAAH/gAAD/4AAB/+AAB//gAAf/8IAH//+AH///g//ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAA
        AAAAAAAAAAEAAAABAAAAAAAAzJmZAMSUlADFlpYAw5SUAMycnAC7j48Auo6OALKIiADOnp4Av5OTALeN
        jQCziooAsomJALqQkADNoKAAu5KSAKuFhQDQo6MAo4CAALWPjwCae3sAkXR0ANasrACYenoAk3Z2AI9z
        cwCnh4cAiG5uANOsrADOqKgAiG9vANCqqgCJcHAAtZWVAMWlpQCzlpYAknt7AKeNjQCxmJgAppCQALeg
        oACkkZEAuKSkAJyMjACYiIgAZ2FhAFJOTgBjX18AYl5eAJ+fnwCYmJgAkZGRAImJiQCDg4MAgoKCAICA
        gAB5eXkAc3NzAG5ubgBtbW0AZ2dnAGVlZQBkZGQAX19fAF5eXgBWVlYAU1NTAE9PTwBNTU0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVDNAAAAAAAAAAAAAAsQSIFFj8sQTYAAAAAAAASBRwMBQwW
        BQc8AAAAAAA5EAUFBQUFBQUMRTw5AAAFDAwFBQUdBQUFAgwCMQAABQUFBSsAAAAABQUFBSoAACIFBSUA
        AAAAAAAFBRo/Nh0QBQI6AAAAAAAABQUMG0MFBQURPwAAAAAAAB0FBQUyHR0FAkUyAAAAAAAFBREmAAAj
        BQUcQzIAAAAnBQUVMQAABQUFBRovQz8VBQUFBSoAAB0dEgUFBQUFBQUHGwUAAAAAABIFBQUFBQUFEDYA
        AAAAAAAdBR0dBQwrBQUAAAAAAAAAAAAAHQUFAAAAAAAAAP4/AADwBwAA4AcAAMABAACAAQAAg8EAAIfg
        AAAH4AAAB+AAAAPhAACBwQAAgAEAAIADAADgBwAA4A8AAPx/AAA=
</value>
  </data>
</root>