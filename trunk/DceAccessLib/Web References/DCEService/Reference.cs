//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3031
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3031.
// 
#pragma warning disable 1591

namespace DCEAccessLib.DceService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DCEAccessSoap", Namespace="http://edu.kvazar-micro.com/dce")]
    public partial class DCEAccess : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataSetsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DCEAccess() {
            this.Url = global::DCEAccessLib.Properties.Settings.Default.DCEAccessLib_DceService_DCEAccess;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataSetCompletedEventHandler GetDataSetCompleted;
        
        /// <remarks/>
        public event SaveDataSetCompletedEventHandler SaveDataSetCompleted;
        
        /// <remarks/>
        public event UpdateDataSetCompletedEventHandler UpdateDataSetCompleted;
        
        /// <remarks/>
        public event ExecSQLCompletedEventHandler ExecSQLCompleted;
        
        /// <remarks/>
        public event UpdateDataSetsCompletedEventHandler UpdateDataSetsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edu.kvazar-micro.com/dce/GetDataSet", RequestNamespace="http://edu.kvazar-micro.com/dce", ResponseNamespace="http://edu.kvazar-micro.com/dce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DCETransactionResult GetDataSet(string sqlString, string tableName) {
            object[] results = this.Invoke("GetDataSet", new object[] {
                        sqlString,
                        tableName});
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataSet(string sqlString, string tableName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataSet", new object[] {
                        sqlString,
                        tableName}, callback, asyncState);
        }
        
        /// <remarks/>
        public DCETransactionResult EndGetDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSetAsync(string sqlString, string tableName) {
            this.GetDataSetAsync(sqlString, tableName, null);
        }
        
        /// <remarks/>
        public void GetDataSetAsync(string sqlString, string tableName, object userState) {
            if ((this.GetDataSetOperationCompleted == null)) {
                this.GetDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDataSet", new object[] {
                        sqlString,
                        tableName}, this.GetDataSetOperationCompleted, userState);
        }
        
        private void OnGetDataSetOperationCompleted(object arg) {
            if ((this.GetDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSetCompleted(this, new GetDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edu.kvazar-micro.com/dce/SaveDataSet", RequestNamespace="http://edu.kvazar-micro.com/dce", ResponseNamespace="http://edu.kvazar-micro.com/dce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DCETransactionResult SaveDataSet(string sqlString, string tableName, System.Data.DataSet ds) {
            object[] results = this.Invoke("SaveDataSet", new object[] {
                        sqlString,
                        tableName,
                        ds});
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDataSet(string sqlString, string tableName, System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDataSet", new object[] {
                        sqlString,
                        tableName,
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public DCETransactionResult EndSaveDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataSetAsync(string sqlString, string tableName, System.Data.DataSet ds) {
            this.SaveDataSetAsync(sqlString, tableName, ds, null);
        }
        
        /// <remarks/>
        public void SaveDataSetAsync(string sqlString, string tableName, System.Data.DataSet ds, object userState) {
            if ((this.SaveDataSetOperationCompleted == null)) {
                this.SaveDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataSetOperationCompleted);
            }
            this.InvokeAsync("SaveDataSet", new object[] {
                        sqlString,
                        tableName,
                        ds}, this.SaveDataSetOperationCompleted, userState);
        }
        
        private void OnSaveDataSetOperationCompleted(object arg) {
            if ((this.SaveDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataSetCompleted(this, new SaveDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edu.kvazar-micro.com/dce/UpdateDataSet", RequestNamespace="http://edu.kvazar-micro.com/dce", ResponseNamespace="http://edu.kvazar-micro.com/dce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DCETransactionResult UpdateDataSet(string sqlString, string tableName, System.Data.DataSet dataSet) {
            object[] results = this.Invoke("UpdateDataSet", new object[] {
                        sqlString,
                        tableName,
                        dataSet});
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDataSet(string sqlString, string tableName, System.Data.DataSet dataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDataSet", new object[] {
                        sqlString,
                        tableName,
                        dataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public DCETransactionResult EndUpdateDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataSetAsync(string sqlString, string tableName, System.Data.DataSet dataSet) {
            this.UpdateDataSetAsync(sqlString, tableName, dataSet, null);
        }
        
        /// <remarks/>
        public void UpdateDataSetAsync(string sqlString, string tableName, System.Data.DataSet dataSet, object userState) {
            if ((this.UpdateDataSetOperationCompleted == null)) {
                this.UpdateDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataSetOperationCompleted);
            }
            this.InvokeAsync("UpdateDataSet", new object[] {
                        sqlString,
                        tableName,
                        dataSet}, this.UpdateDataSetOperationCompleted, userState);
        }
        
        private void OnUpdateDataSetOperationCompleted(object arg) {
            if ((this.UpdateDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataSetCompleted(this, new UpdateDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edu.kvazar-micro.com/dce/ExecSQL", RequestNamespace="http://edu.kvazar-micro.com/dce", ResponseNamespace="http://edu.kvazar-micro.com/dce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DCETransactionResult ExecSQL(string sqlString) {
            object[] results = this.Invoke("ExecSQL", new object[] {
                        sqlString});
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecSQL(string sqlString, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecSQL", new object[] {
                        sqlString}, callback, asyncState);
        }
        
        /// <remarks/>
        public DCETransactionResult EndExecSQL(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public void ExecSQLAsync(string sqlString) {
            this.ExecSQLAsync(sqlString, null);
        }
        
        /// <remarks/>
        public void ExecSQLAsync(string sqlString, object userState) {
            if ((this.ExecSQLOperationCompleted == null)) {
                this.ExecSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecSQLOperationCompleted);
            }
            this.InvokeAsync("ExecSQL", new object[] {
                        sqlString}, this.ExecSQLOperationCompleted, userState);
        }
        
        private void OnExecSQLOperationCompleted(object arg) {
            if ((this.ExecSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecSQLCompleted(this, new ExecSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edu.kvazar-micro.com/dce/UpdateDataSets", RequestNamespace="http://edu.kvazar-micro.com/dce", ResponseNamespace="http://edu.kvazar-micro.com/dce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DCETransactionResult UpdateDataSets(string[] sql, string[] tableName, [System.Xml.Serialization.XmlArrayItemAttribute("DataSet")] System.Data.DataSet[] dataSets) {
            object[] results = this.Invoke("UpdateDataSets", new object[] {
                        sql,
                        tableName,
                        dataSets});
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDataSets(string[] sql, string[] tableName, System.Data.DataSet[] dataSets, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDataSets", new object[] {
                        sql,
                        tableName,
                        dataSets}, callback, asyncState);
        }
        
        /// <remarks/>
        public DCETransactionResult EndUpdateDataSets(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DCETransactionResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataSetsAsync(string[] sql, string[] tableName, System.Data.DataSet[] dataSets) {
            this.UpdateDataSetsAsync(sql, tableName, dataSets, null);
        }
        
        /// <remarks/>
        public void UpdateDataSetsAsync(string[] sql, string[] tableName, System.Data.DataSet[] dataSets, object userState) {
            if ((this.UpdateDataSetsOperationCompleted == null)) {
                this.UpdateDataSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataSetsOperationCompleted);
            }
            this.InvokeAsync("UpdateDataSets", new object[] {
                        sql,
                        tableName,
                        dataSets}, this.UpdateDataSetsOperationCompleted, userState);
        }
        
        private void OnUpdateDataSetsOperationCompleted(object arg) {
            if ((this.UpdateDataSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataSetsCompleted(this, new UpdateDataSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3031")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://edu.kvazar-micro.com/dce")]
    public partial class DCETransactionResult {
        
        private byte classField;
        
        private byte stateField;
        
        private int numberField;
        
        private string messageField;
        
        private string sqlStringField;
        
        private System.Data.DataSet dataSetField;
        
        private TransactionResult resultField;
        
        private string exceptionClassField;
        
        /// <remarks/>
        public byte Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public int Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string SqlString {
            get {
                return this.sqlStringField;
            }
            set {
                this.sqlStringField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
            }
        }
        
        /// <remarks/>
        public TransactionResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionClass {
            get {
                return this.exceptionClassField;
            }
            set {
                this.exceptionClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3031")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://edu.kvazar-micro.com/dce")]
    public enum TransactionResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        SqlException,
        
        /// <remarks/>
        UnhandledException,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    public delegate void GetDataSetCompletedEventHandler(object sender, GetDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DCETransactionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DCETransactionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    public delegate void SaveDataSetCompletedEventHandler(object sender, SaveDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DCETransactionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DCETransactionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    public delegate void UpdateDataSetCompletedEventHandler(object sender, UpdateDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DCETransactionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DCETransactionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    public delegate void ExecSQLCompletedEventHandler(object sender, ExecSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DCETransactionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DCETransactionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    public delegate void UpdateDataSetsCompletedEventHandler(object sender, UpdateDataSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3031")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DCETransactionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DCETransactionResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591